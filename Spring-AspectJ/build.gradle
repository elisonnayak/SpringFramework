/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()

}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'org.springframework:spring-web:4.3.18.RELEASE'
	compile 'org.springframework:spring-jdbc:4.3.18.RELEASE'
	compile 'org.springframework:spring-aspects:4.3.18.RELEASE'
	compile 'org.springframework:spring-jms:4.3.18.RELEASE'
	compile 'org.springframework:spring-jpa:2.0.8'
	testCompile 'org.springframework:spring-test:4.3.18.RELEASE'
	
	compile 'javax.servlet:jstl:1.2'    

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

